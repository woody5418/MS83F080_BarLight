

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Wed Jul 11 14:53:49 2018

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text89,local,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,delta=2
     9                           	psect	text90,local,class=CODE,delta=2
    10                           	psect	text91,local,class=CODE,delta=2
    11                           	psect	text92,local,class=CODE,delta=2
    12                           	psect	swtext1,local,class=CONST,delta=2
    13                           	psect	text93,local,class=CODE,delta=2
    14                           	psect	text94,local,class=CODE,delta=2
    15                           	psect	text95,local,class=CODE,delta=2
    16                           	psect	text96,local,class=CODE,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text97,local,class=CODE,delta=2
    19                           	psect	pa_nodes,global,class=CODE,delta=2
    20                           	dabs	1,0x19D,1
    21                           	dabs	1,0x19E,1
    22                           	dabs	1,0x19E,1
    23                           	dabs	1,0x19E,1
    24                           	dabs	1,0x18C,1
    25                           	dabs	1,0x19E,1
    26                           	dabs	1,0x19E,1
    27                           	dabs	1,0x19E,1
    28                           	dabs	1,0x19E,1
    29                           	dabs	1,0x19D,1
    30                           	dabs	1,0x19D,1
    31                           	dabs	1,0x19D,1
    32                           	dabs	1,0x19D,1
    33                           	dabs	1,0x19D,1
    34                           	dabs	1,0x18C,1
    35                           	dabs	1,0x7E,2
    36  000A                     
    37                           	psect	text89
    38  0000                     __ptext89:	
    39  019D                     _PSTRCON	set	413	;_PSTRCON
    40  019E                     _SRCON	set	414	;_SRCON
    41  0CF5                     _C1SEN	set	3317	;_C1SEN
    42  0CF4                     _C2REN	set	3316	;_C2REN
    43  0C67                     _EEPGD	set	3175	;_EEPGD
    44  0CF2                     _PULSR	set	3314	;_PULSR
    45  0CF3                     _PULSS	set	3315	;_PULSS
    46  0CF6                     _SR0	set	3318	;_SR0
    47  0CF7                     _SR1	set	3319	;_SR1
    48  0CE8                     _STRA	set	3304	;_STRA
    49  0CE9                     _STRB	set	3305	;_STRB
    50  0CEA                     _STRC	set	3306	;_STRC
    51  0CEB                     _STRD	set	3307	;_STRD
    52  0CEC                     _STRSYNC	set	3308	;_STRSYNC
    53  0C62                     _WREN	set	3170	;_WREN
    54  001F                     _ADCON0	set	31
    55  001E                     _ADRESH	set	30
    56  0018                     _WDTCON	set	24
    57  00FF                     _ADFM	set	255
    58  00F8                     _ADON	set	248
    59  00FA                     _CHS0	set	250
    60  00FB                     _CHS1	set	251
    61  00FC                     _CHS2	set	252
    62  00C8                     _CM0	set	200
    63  00C9                     _CM1	set	201
    64  00CA                     _CM2	set	202
    65  00F9                     _GO_DONE	set	249
    66  0028                     _PA0	set	40
    67  0029                     _PA1	set	41
    68  002E                     _PA6	set	46
    69  0039                     _PC1	set	57
    70  003B                     _PC3	set	59
    71  00FD                     _VCFG0	set	253
    72  009E                     _ADRESL	set	158
    73  0081                     _OPTION	set	129
    74  008F                     _OSCCON	set	143
    75  04FC                     _ADCS0	set	1276
    76  04FD                     _ADCS1	set	1277
    77  04FE                     _ADCS2	set	1278
    78  0488                     _ANSEL0	set	1160
    79  0489                     _ANSEL1	set	1161
    80  048A                     _ANSEL2	set	1162
    81  048B                     _ANSEL3	set	1163
    82  048C                     _ANSEL4	set	1164
    83  048D                     _ANSEL5	set	1165
    84  048E                     _ANSEL6	set	1166
    85  048F                     _ANSEL7	set	1167
    86  04FF                     _DIVS	set	1279
    87  0428                     _TRISA0	set	1064
    88  0429                     _TRISA1	set	1065
    89  042E                     _TRISA6	set	1070
    90  0439                     _TRISC1	set	1081
    91  043A                     _TRISC2	set	1082
    92  043B                     _TRISC3	set	1083
    93  044C                     _WPDA4	set	1100
    94  044B                     _WPDC1	set	1099
    95  044A                     _WPDC2	set	1098
    96  0449                     _WPDC3	set	1097
    97  04A8                     _WPUA0	set	1192
    98  04A9                     _WPUA1	set	1193
    99  04AE                     _WPUA6	set	1198
   100  0441                     _WPUC1	set	1089
   101  0442                     _WPUC2	set	1090
   102  0443                     _WPUC3	set	1091
   103                           
   104                           	psect	cinit
   105  017C                     start_initialization:	
   106                           
   107                           ; Clear objects allocated to COMMON
   108  017C  01F8               	clrf	__pbssCOMMON& (0+127)
   109  017D  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   110  017E                     end_of_initialization:	
   111                           ;End of C runtime variable initialization code
   112                           
   113  017E  0183               	clrf	3
   114  017F  289C               	ljmp	_main	;jump to C main() function
   115                           
   116                           	psect	bssCOMMON
   117  0078                     __pbssCOMMON:	
   118  0078                     _ADC_Class:	
   119  0078                     	ds	2
   120                           
   121                           	psect	cstackCOMMON
   122  0070                     __pcstackCOMMON:	
   123  0070                     ?_System_init:	
   124  0070                     ?_GPIO_Init:	
   125                           ; 0 bytes @ 0x0
   126                           
   127  0070                     ?_ADC_Init:	
   128                           ; 0 bytes @ 0x0
   129                           
   130  0070                     ?_LED_Contrl:	
   131                           ; 0 bytes @ 0x0
   132                           
   133  0070                     ?_main:	
   134                           ; 0 bytes @ 0x0
   135                           
   136  0070                     ?_ISR:	
   137                           ; 0 bytes @ 0x0
   138                           
   139  0070                     ??_ISR:	
   140                           ; 0 bytes @ 0x0
   141                           
   142                           
   143                           ; 0 bytes @ 0x0
   144  0070                     	ds	2
   145  0072                     ??_System_init:	
   146  0072                     ??_GPIO_Init:	
   147                           ; 0 bytes @ 0x2
   148                           
   149  0072                     ?_Delay_xms:	
   150                           ; 0 bytes @ 0x2
   151                           
   152  0072                     ??_LED_Contrl:	
   153                           ; 0 bytes @ 0x2
   154                           
   155  0072                     ?_GetADCValue:	
   156                           ; 0 bytes @ 0x2
   157                           
   158  0072                     LED_Contrl@num_t:	
   159                           ; 2 bytes @ 0x2
   160                           
   161  0072                     Delay_xms@x:	
   162                           ; 1 bytes @ 0x2
   163                           
   164                           
   165                           ; 2 bytes @ 0x2
   166  0072                     	ds	2
   167  0074                     ??_GetADCValue:	
   168  0074                     ??_Delay_xms:	
   169                           ; 0 bytes @ 0x4
   170                           
   171  0074                     GetADCValue@ADC_num:	
   172                           ; 0 bytes @ 0x4
   173                           
   174                           
   175                           ; 2 bytes @ 0x4
   176  0074                     	ds	2
   177  0076                     Delay_xms@i:	
   178                           
   179                           ; 2 bytes @ 0x6
   180  0076                     	ds	2
   181  0078                     ??_ADC_Init:	
   182  0078                     ??_main:	
   183                           ; 0 bytes @ 0x8
   184                           
   185                           
   186                           	psect	maintext
   187  009C                     __pmaintext:	
   188                           ; 0 bytes @ 0x8
   189 ;;Data sizes: Strings 0, constant 0, data 0, bss 2, persistent 0 stack 0
   190 ;;Auto spaces:   Size  Autos    Used
   191 ;; COMMON          14      8      10
   192 ;; BANK0           80      0       0
   193 ;; BANK1           32      0       0
   194 ;;
   195 ;; Pointer list with targets:
   196 ;; ?_GetADCValue	unsigned short  size(1) Largest target is 0
   197 ;;
   198 ;;
   199 ;; Critical Paths under _main in COMMON
   200 ;;
   201 ;;   _main->_Delay_xms
   202 ;;   _ADC_Init->_Delay_xms
   203 ;;
   204 ;; Critical Paths under _ISR in COMMON
   205 ;;
   206 ;;   None.
   207 ;;
   208 ;; Critical Paths under _main in BANK0
   209 ;;
   210 ;;   None.
   211 ;;
   212 ;; Critical Paths under _ISR in BANK0
   213 ;;
   214 ;;   None.
   215 ;;
   216 ;; Critical Paths under _main in BANK1
   217 ;;
   218 ;;   None.
   219 ;;
   220 ;; Critical Paths under _ISR in BANK1
   221 ;;
   222 ;;   None.
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   225 ;;
   226 ;;
   227 ;;Call Graph Tables:
   228 ;;
   229 ;; ---------------------------------------------------------------------------------
   230 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   231 ;; ---------------------------------------------------------------------------------
   232 ;; (0) _main                                                 0     0      0      90
   233 ;;                        _System_init
   234 ;;                          _GPIO_Init
   235 ;;                           _ADC_Init
   236 ;;                        _GetADCValue
   237 ;;                          _Delay_xms
   238 ;;                         _LED_Contrl
   239 ;; ---------------------------------------------------------------------------------
   240 ;; (1) _ADC_Init                                             0     0      0      30
   241 ;;                          _Delay_xms
   242 ;; ---------------------------------------------------------------------------------
   243 ;; (1) _Delay_xms                                            6     4      2      30
   244 ;;                                              2 COMMON     6     4      2
   245 ;; ---------------------------------------------------------------------------------
   246 ;; (1) _LED_Contrl                                           1     1      0      15
   247 ;;                                              2 COMMON     1     1      0
   248 ;; ---------------------------------------------------------------------------------
   249 ;; (1) _GetADCValue                                          4     2      2      15
   250 ;;                                              2 COMMON     4     2      2
   251 ;; ---------------------------------------------------------------------------------
   252 ;; (1) _GPIO_Init                                            0     0      0       0
   253 ;; ---------------------------------------------------------------------------------
   254 ;; (1) _System_init                                          0     0      0       0
   255 ;; ---------------------------------------------------------------------------------
   256 ;; Estimated maximum stack depth 1
   257 ;; ---------------------------------------------------------------------------------
   258 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   259 ;; ---------------------------------------------------------------------------------
   260 ;; (3) _ISR                                                  2     2      0       0
   261 ;;                                              0 COMMON     2     2      0
   262 ;; ---------------------------------------------------------------------------------
   263 ;; Estimated maximum stack depth 3
   264 ;; ---------------------------------------------------------------------------------
   265 ;; Call Graph Graphs:
   266 ;; _main (ROOT)
   267 ;;   _System_init
   268 ;;   _GPIO_Init
   269 ;;   _ADC_Init
   270 ;;     _Delay_xms
   271 ;;   _GetADCValue
   272 ;;   _Delay_xms
   273 ;;   _LED_Contrl
   274 ;;
   275 ;; _ISR (ROOT)
   276 ;;
   277 ;; Address spaces:
   278 ;;Name               Size   Autos  Total    Cost      Usage
   279 ;;BITCOMMON            E      0       0       0        0.0%
   280 ;;EEDATA             100      0       0       0        0.0%
   281 ;;NULL                 0      0       0       0        0.0%
   282 ;;CODE                 0      0       0       0        0.0%
   283 ;;COMMON               E      8       A       1       71.4%
   284 ;;BITSFR0              0      0       0       1        0.0%
   285 ;;SFR0                 0      0       0       1        0.0%
   286 ;;BITSFR1              0      0       0       2        0.0%
   287 ;;SFR1                 0      0       0       2        0.0%
   288 ;;STACK                0      0       2       2        0.0%
   289 ;;BITBANK0            50      0       0       3        0.0%
   290 ;;BANK0               50      0       0       4        0.0%
   291 ;;BITBANK1            20      0       0       5        0.0%
   292 ;;BITSFR2              0      0       0       5        0.0%
   293 ;;SFR2                 0      0       0       5        0.0%
   294 ;;BANK1               20      0       0       6        0.0%
   295 ;;ABS                  0      0       A       7        0.0%
   296 ;;DATA                 0      0       C       8        0.0%
   297                           
   298                           
   299 ;; *************** function _main *****************
   300 ;; Defined at:
   301 ;;		line 28 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;		None               void
   308 ;; Registers used:
   309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 17F/0
   312 ;;		On exit  : 60/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1
   315 ;;      Params:         0       0       0
   316 ;;      Locals:         0       0       0
   317 ;;      Temps:          0       0       0
   318 ;;      Totals:         0       0       0
   319 ;;Total ram usage:        0 bytes
   320 ;; Hardware stack levels required when called:    3
   321 ;; This function calls:
   322 ;;		_System_init
   323 ;;		_GPIO_Init
   324 ;;		_ADC_Init
   325 ;;		_GetADCValue
   326 ;;		_Delay_xms
   327 ;;		_LED_Contrl
   328 ;; This function is called by:
   329 ;;		Startup code after reset
   330 ;; This function uses a non-reentrant model
   331 ;;
   332  009C                     _main:	
   333                           
   334                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   335  009C  0064               	clrwdt	;#
   336                           
   337                           ;main.c: 30: System_init();
   338  009D  2167               	fcall	_System_init
   339                           
   340                           ;main.c: 31: GPIO_Init();
   341  009E  2104               	fcall	_GPIO_Init
   342                           
   343                           ;main.c: 32: ADC_Init();
   344  009F  213B               	fcall	_ADC_Init
   345  00A0                     l5415:	
   346  00A0  0064               	clrwdt	;#
   347                           
   348                           ;main.c: 35: ADC_Class = GetADCValue();
   349  00A1  2152               	fcall	_GetADCValue
   350  00A2  0873               	movf	?_GetADCValue+1,w
   351  00A3  00F9               	movwf	_ADC_Class+1
   352  00A4  0872               	movf	?_GetADCValue,w
   353  00A5  00F8               	movwf	_ADC_Class
   354                           
   355                           ;main.c: 36: Delay_xms(1);
   356  00A6  01F2               	clrf	?_Delay_xms
   357  00A7  0AF2               	incf	?_Delay_xms,f
   358  00A8  01F3               	clrf	?_Delay_xms+1
   359  00A9  2123               	fcall	_Delay_xms
   360                           
   361                           ;main.c: 37: if((ADC_Class >= 0)&&(ADC_Class < 200)) LED_Contrl(0);
   362  00AA  3000               	movlw	0
   363  00AB  0279               	subwf	_ADC_Class+1,w
   364  00AC  30C8               	movlw	200
   365  00AD  1903               	skipnz
   366  00AE  0278               	subwf	_ADC_Class,w
   367  00AF  3000               	movlw	0
   368  00B0  1803               	skipnc
   369  00B1  28B4               	goto	L1
   370  00B2  200B               	fcall	_LED_Contrl
   371                           
   372                           ;main.c: 38: if((ADC_Class >= 200)&&(ADC_Class < 250)) LED_Contrl(1);
   373  00B3  3000               	movlw	0
   374  00B4                     L1:	
   375  00B4  0279               	subwf	_ADC_Class+1,w
   376  00B5  30C8               	movlw	200
   377  00B6  1903               	skipnz
   378  00B7  0278               	subwf	_ADC_Class,w
   379  00B8  3000               	movlw	0
   380  00B9  1C03               	skipc
   381  00BA  28C4               	goto	L2
   382  00BB  0279               	subwf	_ADC_Class+1,w
   383  00BC  30FA               	movlw	250
   384  00BD  1903               	skipnz
   385  00BE  0278               	subwf	_ADC_Class,w
   386  00BF  1803               	skipnc
   387  00C0  28C3               	goto	l5431
   388  00C1  3001               	movlw	1
   389  00C2  200B               	fcall	_LED_Contrl
   390  00C3                     l5431:	
   391                           
   392                           ;main.c: 39: if((ADC_Class >= 250)&&(ADC_Class < 450)) LED_Contrl(2);
   393  00C3  3000               	movlw	0
   394  00C4                     L2:	
   395  00C4  0279               	subwf	_ADC_Class+1,w
   396  00C5  30FA               	movlw	250
   397  00C6  1903               	skipnz
   398  00C7  0278               	subwf	_ADC_Class,w
   399  00C8  3001               	movlw	1
   400  00C9  1C03               	skipc
   401  00CA  28D4               	goto	L3
   402  00CB  0279               	subwf	_ADC_Class+1,w
   403  00CC  30C2               	movlw	194
   404  00CD  1903               	skipnz
   405  00CE  0278               	subwf	_ADC_Class,w
   406  00CF  1803               	skipnc
   407  00D0  28D3               	goto	l5437
   408  00D1  3002               	movlw	2
   409  00D2  200B               	fcall	_LED_Contrl
   410  00D3                     l5437:	
   411                           
   412                           ;main.c: 40: if((ADC_Class >= 450)&&(ADC_Class < 600)) LED_Contrl(3);
   413  00D3  3001               	movlw	1
   414  00D4                     L3:	
   415  00D4  0279               	subwf	_ADC_Class+1,w
   416  00D5  30C2               	movlw	194
   417  00D6  1903               	skipnz
   418  00D7  0278               	subwf	_ADC_Class,w
   419  00D8  3002               	movlw	2
   420  00D9  1C03               	skipc
   421  00DA  28E4               	goto	L4
   422  00DB  0279               	subwf	_ADC_Class+1,w
   423  00DC  3058               	movlw	88
   424  00DD  1903               	skipnz
   425  00DE  0278               	subwf	_ADC_Class,w
   426  00DF  1803               	skipnc
   427  00E0  28E3               	goto	l5443
   428  00E1  3003               	movlw	3
   429  00E2  200B               	fcall	_LED_Contrl
   430  00E3                     l5443:	
   431                           
   432                           ;main.c: 41: if((ADC_Class >= 600)&&(ADC_Class < 800)) LED_Contrl(4);
   433  00E3  3002               	movlw	2
   434  00E4                     L4:	
   435  00E4  0279               	subwf	_ADC_Class+1,w
   436  00E5  3058               	movlw	88
   437  00E6  1903               	skipnz
   438  00E7  0278               	subwf	_ADC_Class,w
   439  00E8  3003               	movlw	3
   440  00E9  1C03               	skipc
   441  00EA  28F4               	goto	L5
   442  00EB  0279               	subwf	_ADC_Class+1,w
   443  00EC  3020               	movlw	32
   444  00ED  1903               	skipnz
   445  00EE  0278               	subwf	_ADC_Class,w
   446  00EF  1803               	skipnc
   447  00F0  28F3               	goto	l5449
   448  00F1  3004               	movlw	4
   449  00F2  200B               	fcall	_LED_Contrl
   450  00F3                     l5449:	
   451                           
   452                           ;main.c: 42: if((ADC_Class >= 800)&&(ADC_Class <= 1024)) LED_Contrl(5);
   453  00F3  3003               	movlw	3
   454  00F4                     L5:	
   455  00F4  0279               	subwf	_ADC_Class+1,w
   456  00F5  3020               	movlw	32
   457  00F6  1903               	skipnz
   458  00F7  0278               	subwf	_ADC_Class,w
   459  00F8  1C03               	skipc
   460  00F9  28A0               	goto	l5415
   461  00FA  3004               	movlw	4
   462  00FB  0279               	subwf	_ADC_Class+1,w
   463  00FC  3001               	movlw	1
   464  00FD  1903               	skipnz
   465  00FE  0278               	subwf	_ADC_Class,w
   466  00FF  1803               	skipnc
   467  0100  28A0               	goto	l5415
   468  0101  3005               	movlw	5
   469  0102  200B               	fcall	_LED_Contrl
   470  0103  28A0               	goto	l5415
   471  0104                     __end_of_main:	
   472                           
   473                           	psect	text90
   474  013B                     __ptext90:	
   475 ;; =============== function _main ends ============
   476                           
   477                           
   478 ;; *************** function _ADC_Init *****************
   479 ;; Defined at:
   480 ;;		line 18 in file "MyAdc.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;		None               void
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0, pclath, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 60/20
   491 ;;		On exit  : 60/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1
   494 ;;      Params:         0       0       0
   495 ;;      Locals:         0       0       0
   496 ;;      Temps:          0       0       0
   497 ;;      Totals:         0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; Hardware stack levels required when called:    2
   501 ;; This function calls:
   502 ;;		_Delay_xms
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507  013B                     _ADC_Init:	
   508  013B  3081               	movlw	129
   509                           
   510                           ;MyAdc.c: 20: TRISC2=1;
   511                           
   512                           ; Regs used in _ADC_Init: [wreg+status,2+status,0+pclath+cstack]
   513  013C  1507               	bsf	7,2
   514                           
   515                           ;MyAdc.c: 21: ANSEL6=1;
   516  013D  1711               	bsf	17,6
   517                           
   518                           ;MyAdc.c: 24: DIVS=0;
   519  013E  139F               	bcf	31,7
   520                           
   521                           ;MyAdc.c: 25: ADCS0=0;ADCS1=0;ADCS2=0;
   522  013F  121F               	bcf	31,4
   523  0140  129F               	bcf	31,5
   524  0141  131F               	bcf	31,6
   525                           
   526                           ;MyAdc.c: 27: ADCON0=0B10000001;
   527  0142  1283               	bcf	3,5	;RP0=0, select bank0
   528  0143  009F               	movwf	31	;volatile
   529                           
   530                           ;MyAdc.c: 28: VCFG0=0;
   531  0144  129F               	bcf	31,5
   532                           
   533                           ;MyAdc.c: 29: CHS2=1;CHS1=1;CHS0=0;
   534  0145  161F               	bsf	31,4
   535  0146  159F               	bsf	31,3
   536  0147  111F               	bcf	31,2
   537                           
   538                           ;MyAdc.c: 30: ADFM=1;
   539  0148  179F               	bsf	31,7
   540                           
   541                           ;MyAdc.c: 31: ADON=1;
   542  0149  141F               	bsf	31,0
   543                           
   544                           ;MyAdc.c: 33: Delay_xms(1);
   545  014A  01F2               	clrf	?_Delay_xms
   546  014B  0AF2               	incf	?_Delay_xms,f
   547  014C  01F3               	clrf	?_Delay_xms+1
   548  014D  2123               	fcall	_Delay_xms
   549                           
   550                           ;MyAdc.c: 35: GO_DONE=1;
   551  014E  1283               	bcf	3,5	;RP0=0, select bank0
   552  014F  1303               	bcf	3,6	;RP1=0, select bank0
   553  0150  149F               	bsf	31,1
   554  0151  0008               	return
   555  0152                     __end_of_ADC_Init:	
   556                           
   557                           	psect	text91
   558  0123                     __ptext91:	
   559 ;; =============== function _ADC_Init ends ============
   560                           
   561                           
   562 ;; *************** function _Delay_xms *****************
   563 ;; Defined at:
   564 ;;		line 47 in file "myconfiguration.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  x               2    2[COMMON] unsigned int 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  i               2    6[COMMON] unsigned int 
   569 ;; Return value:  Size  Location     Type
   570 ;;		None               void
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0
   573 ;; Tracked objects:
   574 ;;		On entry : 60/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON   BANK0   BANK1
   578 ;;      Params:         2       0       0
   579 ;;      Locals:         2       0       0
   580 ;;      Temps:          2       0       0
   581 ;;      Totals:         6       0       0
   582 ;;Total ram usage:        6 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; Hardware stack levels required when called:    1
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		_main
   589 ;;		_ADC_Init
   590 ;; This function uses a non-reentrant model
   591 ;;
   592  0123                     _Delay_xms:	
   593                           
   594                           ;myconfiguration.c: 48: unsigned int i;
   595                           ;myconfiguration.c: 49: for(i=0;i<x;i++){
   596                           
   597                           ; Regs used in _Delay_xms: [wreg+status,2+status,0]
   598  0123  01F6               	clrf	Delay_xms@i
   599  0124  01F7               	clrf	Delay_xms@i+1
   600  0125                     l5385:	
   601  0125  0873               	movf	Delay_xms@x+1,w
   602  0126  0277               	subwf	Delay_xms@i+1,w
   603  0127  1D03               	skipz
   604  0128  292B               	goto	u165
   605  0129  0872               	movf	Delay_xms@x,w
   606  012A  0276               	subwf	Delay_xms@i,w
   607  012B                     u165:	
   608  012B  1803               	btfsc	3,0
   609  012C  0008               	return
   610                           
   611                           ;myconfiguration.c: 50: _delay((unsigned long)((1)*(16000000/4000.0)));
   612  012D  3006               	movlw	6
   613  012E  00F5               	movwf	??_Delay_xms+1
   614  012F  3030               	movlw	48
   615  0130  00F4               	movwf	??_Delay_xms
   616  0131                     u287:	
   617  0131  0BF4               	decfsz	??_Delay_xms,f
   618  0132  2931               	goto	u287
   619  0133  0BF5               	decfsz	??_Delay_xms+1,f
   620  0134  2931               	goto	u287
   621  0135  0064               	clrwdt
   622  0136  0064               	clrwdt	;#
   623  0137  0AF6               	incf	Delay_xms@i,f
   624  0138  1903               	skipnz
   625  0139  0AF7               	incf	Delay_xms@i+1,f
   626  013A  2925               	goto	l5385
   627  013B                     __end_of_Delay_xms:	
   628                           
   629                           	psect	text92
   630  000B                     __ptext92:	
   631 ;; =============== function _Delay_xms ends ============
   632                           
   633                           
   634 ;; *************** function _LED_Contrl *****************
   635 ;; Defined at:
   636 ;;		line 21 in file "myled.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  num_t           1    wreg     unsigned char 
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  num_t           1    2[COMMON] unsigned char 
   641 ;; Return value:  Size  Location     Type
   642 ;;		None               void
   643 ;; Registers used:
   644 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 60/0
   648 ;;		Unchanged: FFE00/0
   649 ;; Data sizes:     COMMON   BANK0   BANK1
   650 ;;      Params:         0       0       0
   651 ;;      Locals:         1       0       0
   652 ;;      Temps:          0       0       0
   653 ;;      Totals:         1       0       0
   654 ;;Total ram usage:        1 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:    1
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663  000B                     _LED_Contrl:	
   664                           
   665                           ; Regs used in _LED_Contrl: [wreg-fsr0h+status,2+status,0]
   666                           ;LED_Contrl@num_t stored from wreg
   667  000B  00F2               	movwf	LED_Contrl@num_t
   668                           
   669                           ;myled.c: 22: switch(num_t)
   670  000C  288D               	goto	l5371
   671  000D                     l4309:	
   672                           ;myled.c: 23: {
   673                           ;myled.c: 24: case 1:
   674                           
   675                           
   676                           ;myled.c: 25: PC1=0;
   677  000D  1283               	bcf	3,5	;RP0=0, select bank0
   678  000E  1303               	bcf	3,6	;RP1=0, select bank0
   679  000F  1087               	bcf	7,1
   680                           
   681                           ;myled.c: 26: PA1=PA0=PA6=PC3=1;
   682  0010  1587               	bsf	7,3
   683  0011  1D87               	btfss	7,3
   684  0012  2817               	goto	u20
   685  0013  1283               	bcf	3,5	;RP0=0, select bank0
   686  0014  1303               	bcf	3,6	;RP1=0, select bank0
   687  0015  1705               	bsf	5,6
   688  0016  281A               	goto	u34
   689  0017                     u20:	
   690  0017  1283               	bcf	3,5	;RP0=0, select bank0
   691  0018  1303               	bcf	3,6	;RP1=0, select bank0
   692  0019  1305               	bcf	5,6
   693  001A                     u34:	
   694  001A  1F05               	btfss	5,6
   695  001B  2820               	goto	u30
   696  001C  1283               	bcf	3,5	;RP0=0, select bank0
   697  001D  1303               	bcf	3,6	;RP1=0, select bank0
   698  001E  1405               	bsf	5,0
   699  001F  2823               	goto	u44
   700  0020                     u30:	
   701  0020  1283               	bcf	3,5	;RP0=0, select bank0
   702  0021  1303               	bcf	3,6	;RP1=0, select bank0
   703  0022  1005               	bcf	5,0
   704  0023                     u44:	
   705  0023  1C05               	btfss	5,0
   706  0024  2829               	goto	u40
   707  0025  1283               	bcf	3,5	;RP0=0, select bank0
   708  0026  1303               	bcf	3,6	;RP1=0, select bank0
   709  0027  1485               	bsf	5,1
   710  0028  0008               	return
   711  0029                     u40:	
   712  0029  1283               	bcf	3,5	;RP0=0, select bank0
   713  002A  1303               	bcf	3,6	;RP1=0, select bank0
   714  002B  1085               	bcf	5,1
   715                           
   716                           ;myled.c: 27: break;
   717  002C  0008               	return
   718  002D                     l4311:	
   719                           ;myled.c: 28: case 2:
   720                           
   721                           
   722                           ;myled.c: 29: PC1=PA1=0;
   723  002D  1283               	bcf	3,5	;RP0=0, select bank0
   724  002E  1303               	bcf	3,6	;RP1=0, select bank0
   725  002F  1085               	bcf	5,1
   726  0030  1087               	bcf	7,1
   727                           
   728                           ;myled.c: 30: PA0=PA6=PC3=1;
   729  0031  1587               	bsf	7,3
   730  0032  1D87               	btfss	7,3
   731  0033  2838               	goto	u60
   732  0034  1283               	bcf	3,5	;RP0=0, select bank0
   733  0035  1303               	bcf	3,6	;RP1=0, select bank0
   734  0036  1705               	bsf	5,6
   735  0037  283B               	goto	u74
   736  0038                     u60:	
   737  0038  1283               	bcf	3,5	;RP0=0, select bank0
   738  0039  1303               	bcf	3,6	;RP1=0, select bank0
   739  003A  1305               	bcf	5,6
   740  003B                     u74:	
   741  003B  1F05               	btfss	5,6
   742  003C  2841               	goto	u70
   743  003D  1283               	bcf	3,5	;RP0=0, select bank0
   744  003E  1303               	bcf	3,6	;RP1=0, select bank0
   745  003F  1405               	bsf	5,0
   746  0040  0008               	return
   747  0041                     u70:	
   748  0041  1283               	bcf	3,5	;RP0=0, select bank0
   749  0042  1303               	bcf	3,6	;RP1=0, select bank0
   750  0043  1005               	bcf	5,0
   751                           
   752                           ;myled.c: 31: break;
   753  0044  0008               	return
   754  0045                     l4312:	
   755                           ;myled.c: 32: case 3:
   756                           
   757                           
   758                           ;myled.c: 33: PC1=PA1=PA0=0;
   759  0045  1283               	bcf	3,5	;RP0=0, select bank0
   760  0046  1303               	bcf	3,6	;RP1=0, select bank0
   761  0047  1005               	bcf	5,0
   762  0048  1085               	bcf	5,1
   763  0049  1087               	bcf	7,1
   764                           
   765                           ;myled.c: 34: PA6=PC3=1;
   766  004A  1587               	bsf	7,3
   767  004B  1D87               	btfss	7,3
   768  004C  2851               	goto	u90
   769  004D  1283               	bcf	3,5	;RP0=0, select bank0
   770  004E  1303               	bcf	3,6	;RP1=0, select bank0
   771  004F  1705               	bsf	5,6
   772  0050  0008               	return
   773  0051                     u90:	
   774  0051  1283               	bcf	3,5	;RP0=0, select bank0
   775  0052  1303               	bcf	3,6	;RP1=0, select bank0
   776  0053  1305               	bcf	5,6
   777                           
   778                           ;myled.c: 35: break;
   779  0054  0008               	return
   780  0055                     l4313:	
   781                           ;myled.c: 36: case 4:
   782                           
   783                           
   784                           ;myled.c: 37: PC1=PA1=PA0=PA6=0;
   785  0055  1283               	bcf	3,5	;RP0=0, select bank0
   786  0056  1303               	bcf	3,6	;RP1=0, select bank0
   787  0057  1305               	bcf	5,6
   788  0058  1005               	bcf	5,0
   789  0059  1085               	bcf	5,1
   790  005A  1087               	bcf	7,1
   791                           
   792                           ;myled.c: 38: PC3=1;
   793  005B  1587               	bsf	7,3
   794                           
   795                           ;myled.c: 39: break;
   796  005C  0008               	return
   797  005D                     l4314:	
   798                           ;myled.c: 40: case 5:
   799                           
   800                           
   801                           ;myled.c: 41: PC1=PA1=PA0=PA6=PC3=0;
   802  005D  1283               	bcf	3,5	;RP0=0, select bank0
   803  005E  1303               	bcf	3,6	;RP1=0, select bank0
   804  005F  1187               	bcf	7,3
   805  0060  1305               	bcf	5,6
   806  0061  1005               	bcf	5,0
   807  0062  1085               	bcf	5,1
   808  0063  1087               	bcf	7,1
   809                           
   810                           ;myled.c: 42: break;
   811  0064  0008               	return
   812  0065                     l4315:	
   813                           ;myled.c: 43: default :
   814                           
   815                           
   816                           ;myled.c: 44: PC1=PA1=PA0=PA6=PC3=1;
   817  0065  1283               	bcf	3,5	;RP0=0, select bank0
   818  0066  1303               	bcf	3,6	;RP1=0, select bank0
   819  0067  1587               	bsf	7,3
   820  0068  1D87               	btfss	7,3
   821  0069  286E               	goto	u110
   822  006A  1283               	bcf	3,5	;RP0=0, select bank0
   823  006B  1303               	bcf	3,6	;RP1=0, select bank0
   824  006C  1705               	bsf	5,6
   825  006D  2871               	goto	u124
   826  006E                     u110:	
   827  006E  1283               	bcf	3,5	;RP0=0, select bank0
   828  006F  1303               	bcf	3,6	;RP1=0, select bank0
   829  0070  1305               	bcf	5,6
   830  0071                     u124:	
   831  0071  1F05               	btfss	5,6
   832  0072  2877               	goto	u120
   833  0073  1283               	bcf	3,5	;RP0=0, select bank0
   834  0074  1303               	bcf	3,6	;RP1=0, select bank0
   835  0075  1405               	bsf	5,0
   836  0076  287A               	goto	u134
   837  0077                     u120:	
   838  0077  1283               	bcf	3,5	;RP0=0, select bank0
   839  0078  1303               	bcf	3,6	;RP1=0, select bank0
   840  0079  1005               	bcf	5,0
   841  007A                     u134:	
   842  007A  1C05               	btfss	5,0
   843  007B  2880               	goto	u130
   844  007C  1283               	bcf	3,5	;RP0=0, select bank0
   845  007D  1303               	bcf	3,6	;RP1=0, select bank0
   846  007E  1485               	bsf	5,1
   847  007F  2883               	goto	u144
   848  0080                     u130:	
   849  0080  1283               	bcf	3,5	;RP0=0, select bank0
   850  0081  1303               	bcf	3,6	;RP1=0, select bank0
   851  0082  1085               	bcf	5,1
   852  0083                     u144:	
   853  0083  1C85               	btfss	5,1
   854  0084  2889               	goto	u140
   855  0085  1283               	bcf	3,5	;RP0=0, select bank0
   856  0086  1303               	bcf	3,6	;RP1=0, select bank0
   857  0087  1487               	bsf	7,1
   858  0088  0008               	return
   859  0089                     u140:	
   860  0089  1283               	bcf	3,5	;RP0=0, select bank0
   861  008A  1303               	bcf	3,6	;RP1=0, select bank0
   862  008B  1087               	bcf	7,1
   863                           
   864                           ;myled.c: 45: break;
   865  008C  0008               	return
   866  008D                     l5371:	
   867  008D  0872               	movf	LED_Contrl@num_t,w
   868                           
   869                           ; Switch size 1, requested type "space"
   870                           ; Number of cases is 5, Range of values is 1 to 5
   871                           ; switch strategies available:
   872                           ; Name         Instructions Cycles
   873                           ; direct_byte           14     9 (fixed)
   874                           ; simple_byte           16     9 (average)
   875                           ; jumptable            263     9 (fixed)
   876                           ;	Chosen strategy is direct_byte
   877  008E  3EFF               	addlw	-1
   878  008F  1C03               	skipc
   879  0090  2865               	goto	l4315
   880  0091  0084               	movwf	4
   881  0092  3005               	movlw	5
   882  0093  0204               	subwf	4,w
   883  0094  1803               	skipnc
   884  0095  2865               	goto	l4315
   885  0096  3001               	movlw	high S5475
   886  0097  008A               	movwf	10
   887  0098  3077               	movlw	low S5475
   888  0099  0704               	addwf	4,w
   889  009A  0082               	movwf	2
   890  009B  0008               	return
   891  009C                     __end_of_LED_Contrl:	
   892                           
   893                           	psect	swtext1
   894  0177                     __pswtext1:	
   895  0177                     S5475:	
   896  0177  280D               	ljmp	l4309
   897  0178  282D               	ljmp	l4311
   898  0179  2845               	ljmp	l4312
   899  017A  2855               	ljmp	l4313
   900  017B  285D               	ljmp	l4314
   901                           
   902                           	psect	text93
   903  0152                     __ptext93:	
   904 ;; =============== function _LED_Contrl ends ============
   905                           
   906                           
   907 ;; *************** function _GetADCValue *****************
   908 ;; Defined at:
   909 ;;		line 46 in file "MyAdc.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  ADC_num         2    4[COMMON] unsigned short 
   914 ;; Return value:  Size  Location     Type
   915 ;;                  2    2[COMMON] unsigned short 
   916 ;; Registers used:
   917 ;;		wreg, status,2
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 60/0
   921 ;;		Unchanged: FFF9F/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1
   923 ;;      Params:         2       0       0
   924 ;;      Locals:         2       0       0
   925 ;;      Temps:          0       0       0
   926 ;;      Totals:         4       0       0
   927 ;;Total ram usage:        4 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    1
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_main
   934 ;; This function uses a non-reentrant model
   935 ;;
   936  0152                     _GetADCValue:	
   937                           
   938                           ;MyAdc.c: 47: unsigned short int ADC_num=0;
   939                           
   940                           ; Regs used in _GetADCValue: [wreg+status,2]
   941  0152  01F4               	clrf	GetADCValue@ADC_num
   942  0153  01F5               	clrf	GetADCValue@ADC_num+1
   943                           
   944                           ;MyAdc.c: 49: if(GO_DONE==0){
   945  0154  1283               	bcf	3,5	;RP0=0, select bank0
   946  0155  1303               	bcf	3,6	;RP1=0, select bank0
   947  0156  189F               	btfsc	31,1
   948  0157  2962               	goto	l2163
   949                           
   950                           ;MyAdc.c: 50: ADC_num=ADRESH;
   951  0158  081E               	movf	30,w	;volatile
   952  0159  00F4               	movwf	GetADCValue@ADC_num
   953  015A  01F5               	clrf	GetADCValue@ADC_num+1
   954                           
   955                           ;MyAdc.c: 51: ADC_num=ADC_num<<8;
   956  015B  00F5               	movwf	GetADCValue@ADC_num+1
   957  015C  01F4               	clrf	GetADCValue@ADC_num
   958                           
   959                           ;MyAdc.c: 52: ADC_num=ADC_num|ADRESL;
   960  015D  1683               	bsf	3,5	;RP0=1, select bank1
   961  015E  081E               	movf	30,w	;volatile
   962  015F  04F4               	iorwf	GetADCValue@ADC_num,f
   963                           
   964                           ;MyAdc.c: 53: GO_DONE=1;
   965  0160  1283               	bcf	3,5	;RP0=0, select bank0
   966  0161  149F               	bsf	31,1
   967  0162                     l2163:	
   968                           
   969                           ;MyAdc.c: 54: }
   970                           ;MyAdc.c: 55: return ADC_num;
   971  0162  0875               	movf	GetADCValue@ADC_num+1,w
   972  0163  00F3               	movwf	?_GetADCValue+1
   973  0164  0874               	movf	GetADCValue@ADC_num,w
   974  0165  00F2               	movwf	?_GetADCValue
   975  0166  0008               	return
   976  0167                     __end_of_GetADCValue:	
   977                           
   978                           	psect	text94
   979  0104                     __ptext94:	
   980 ;; =============== function _GetADCValue ends ============
   981                           
   982                           
   983 ;; *************** function _GPIO_Init *****************
   984 ;; Defined at:
   985 ;;		line 23 in file "myconfiguration.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;		None               void
   992 ;; Registers used:
   993 ;;		None
   994 ;; Tracked objects:
   995 ;;		On entry : 60/0
   996 ;;		On exit  : 60/20
   997 ;;		Unchanged: FFF9F/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1
   999 ;;      Params:         0       0       0
  1000 ;;      Locals:         0       0       0
  1001 ;;      Temps:          0       0       0
  1002 ;;      Totals:         0       0       0
  1003 ;;Total ram usage:        0 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; Hardware stack levels required when called:    1
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_main
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012  0104                     _GPIO_Init:	
  1013                           
  1014                           ;myconfiguration.c: 25: TRISA0=0;
  1015                           
  1016                           ; Regs used in _GPIO_Init: []
  1017  0104  1683               	bsf	3,5	;RP0=1, select bank1
  1018  0105  1005               	bcf	5,0
  1019                           
  1020                           ;myconfiguration.c: 26: TRISA1=0;
  1021  0106  1085               	bcf	5,1
  1022                           
  1023                           ;myconfiguration.c: 27: TRISA6=0;
  1024  0107  1305               	bcf	5,6
  1025                           
  1026                           ;myconfiguration.c: 29: TRISC1=0;
  1027  0108  1087               	bcf	7,1
  1028                           
  1029                           ;myconfiguration.c: 30: TRISC2=0;
  1030  0109  1107               	bcf	7,2
  1031                           
  1032                           ;myconfiguration.c: 31: TRISC3=0;
  1033  010A  1187               	bcf	7,3
  1034                           
  1035                           ;myconfiguration.c: 33: CM0=1;CM1=1;CM2=1;
  1036  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1037  010C  1419               	bsf	25,0
  1038  010D  1499               	bsf	25,1
  1039  010E  1519               	bsf	25,2
  1040                           
  1041                           ;myconfiguration.c: 37: ANSEL0=0;ANSEL1=0;ANSEL2=0;ANSEL3=0;ANSEL4=0;ANSEL5=0;ANSEL6=0;A
      +                          NSEL7=0;
  1042  010F  1683               	bsf	3,5	;RP0=1, select bank1
  1043  0110  1011               	bcf	17,0
  1044  0111  1091               	bcf	17,1
  1045  0112  1111               	bcf	17,2
  1046  0113  1191               	bcf	17,3
  1047  0114  1211               	bcf	17,4
  1048  0115  1291               	bcf	17,5
  1049  0116  1311               	bcf	17,6
  1050  0117  1391               	bcf	17,7
  1051                           
  1052                           ;myconfiguration.c: 39: WPUA0=1;WPUA1=1;WPUA6=1;
  1053  0118  1415               	bsf	21,0
  1054  0119  1495               	bsf	21,1
  1055  011A  1715               	bsf	21,6
  1056                           
  1057                           ;myconfiguration.c: 41: WPUC1=1;WPUC2=0;WPUC3=1;
  1058  011B  1488               	bsf	8,1
  1059  011C  1108               	bcf	8,2
  1060  011D  1588               	bsf	8,3
  1061                           
  1062                           ;myconfiguration.c: 43: WPDA4=0;WPDC1=0;WPDC2=0;WPDC3=0;
  1063  011E  1209               	bcf	9,4
  1064  011F  1189               	bcf	9,3
  1065  0120  1109               	bcf	9,2
  1066  0121  1089               	bcf	9,1
  1067  0122  0008               	return
  1068  0123                     __end_of_GPIO_Init:	
  1069                           
  1070                           	psect	text95
  1071  0167                     __ptext95:	
  1072 ;; =============== function _GPIO_Init ends ============
  1073                           
  1074                           
  1075 ;; *************** function _System_init *****************
  1076 ;; Defined at:
  1077 ;;		line 14 in file "myconfiguration.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;		None               void
  1084 ;; Registers used:
  1085 ;;		wreg, status,2
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 60/0
  1089 ;;		Unchanged: FFF9F/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1
  1091 ;;      Params:         0       0       0
  1092 ;;      Locals:         0       0       0
  1093 ;;      Temps:          0       0       0
  1094 ;;      Totals:         0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    1
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104  0167                     _System_init:	
  1105                           
  1106                           ;myconfiguration.c: 16: OPTION = 0B00000000;
  1107                           
  1108                           ; Regs used in _System_init: [wreg+status,2]
  1109  0167  1683               	bsf	3,5	;RP0=1, select bank1
  1110  0168  1303               	bcf	3,6	;RP1=0, select bank1
  1111  0169  0181               	clrf	1	;volatile
  1112                           
  1113                           ;myconfiguration.c: 17: OSCCON = 0B01110000;
  1114  016A  3070               	movlw	112
  1115  016B  008F               	movwf	15	;volatile
  1116                           
  1117                           ;myconfiguration.c: 18: WDTCON = 0B00001001;
  1118  016C  3009               	movlw	9
  1119  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1120  016E  0098               	movwf	24	;volatile
  1121  016F  0008               	return
  1122  0170                     __end_of_System_init:	
  1123                           
  1124                           	psect	text96
  1125  0170                     __ptext96:	
  1126 ;; =============== function _System_init ends ============
  1127                           
  1128                           
  1129 ;; *************** function _ISR *****************
  1130 ;; Defined at:
  1131 ;;		line 53 in file "main.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;		None               void
  1138 ;; Registers used:
  1139 ;;		None
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: FFFFF/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1
  1145 ;;      Params:         0       0       0
  1146 ;;      Locals:         0       0       0
  1147 ;;      Temps:          2       0       0
  1148 ;;      Totals:         2       0       0
  1149 ;;Total ram usage:        2 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		Interrupt level 1
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157  0170                     _ISR:	
  1158  0170  0871               	movf	??_ISR+1,w
  1159  0171  008A               	movwf	10
  1160  0172  0E70               	swapf	??_ISR^(0+-128),w
  1161  0173  0083               	movwf	3
  1162  0174  0EFE               	swapf	126,f
  1163  0175  0E7E               	swapf	126,w
  1164  0176  0009               	retfie
  1165  0177                     __end_of_ISR:	
  1166                           
  1167                           	psect	intentry
  1168  0004                     __pintentry:	
  1169                           ; Regs used in _ISR: []
  1170                           
  1171  0004                     interrupt_function:	
  1172  007E                     saved_w	set	btemp
  1173  0004  00FE               	movwf	btemp
  1174  0005  0E03               	swapf	3,w
  1175  0006  00F0               	movwf	??_ISR
  1176  0007  080A               	movf	10,w
  1177  0008  00F1               	movwf	??_ISR+1
  1178  0009  2970               	ljmp	_ISR
  1179                           
  1180                           	psect	text97
  1181  0000                     __ptext97:	
  1182 ;; =============== function _ISR ends ============
  1183                           
  1184  007E                     btemp	set	126	;btemp
  1185  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Jul 11 14:53:49 2018

                   pc 0002                    u20 0017                    u30 0020                    u40 0029  
                  u34 001A                    u60 0038                    u44 0023                    u70 0041  
                  u90 0051                    u74 003B                    fsr 0004           ?_LED_Contrl 0070  
                 _CM0 00C8                   _CM1 00C9                   _CM2 00CA                   _PA0 0028  
                 _PA1 0029                   _PC1 0039                   _PA6 002E                   _PC3 003B  
                 u110 006E                   u120 0077                   u130 0080                   u140 0089  
                 u124 0071                   u134 007A                   u144 0083                   u165 012B  
                 _ISR 0170                   u287 0131                   _SR0 0CF6                   _SR1 0CF7  
                S5475 0177                  ?_ISR 0070                  l2160 0000                  l2163 0162  
                l2164 0000                  l3234 0000                  l3243 0000                  l3237 0000  
                l4311 002D                  l4312 0045                  l4313 0055                  l4314 005D  
                l4315 0065                  l4309 000D                  l5401 0000                  l5403 0000  
                l5411 0000                  l5405 0000                  l5421 0000                  l5413 0000  
                l5351 0000                  l5431 00C3                  l5415 00A0                  l5407 0000  
                l5353 0000                  l5417 0000                  l5409 0000                  l5355 0000  
                l5363 0000                  l5371 008D                  l5443 00E3                  l5419 0000  
                l5349 0000                  l5357 0000                  l5381 0000                  l5437 00D3  
                l5359 0000                  l5367 0000                  l5383 0000                  l5391 0000  
                l5385 0125                  l5377 0000                  l5393 0000                  l5449 00F3  
                l5395 0000                  l5387 0000                  l5397 0000                  l5389 0000  
                l5399 0000                  _ADFM 00FF                  _ADON 00F8                  _CHS0 00FA  
                _CHS1 00FB                  _CHS2 00FC                  _DIVS 04FF                  _STRA 0CE8  
                _STRB 0CE9                  _STRC 0CEA                  _STRD 0CEB                  _WREN 0C62  
                _main 009C                  btemp 007E      __end_of_ADC_Init 0152           _GetADCValue 0152  
                start 000A    __size_of_GPIO_Init 001F  __size_of_System_init 0009                 ??_ISR 0070  
               _C1SEN 0CF5                 _C2REN 0CF4                 _ADCS0 04FC                 _ADCS1 04FD  
               _ADCS2 04FE                 ?_main 0070                 _EEPGD 0C67                 _VCFG0 00FD  
               _WPDA4 044C                 _WPDC1 044B                 _WPDC2 044A                 _SRCON 019E  
               _WPDC3 0449                 _PULSR 0CF2                 _PULSS 0CF3                 _WPUA0 04A8  
               _WPUA1 04A9                 _WPUC1 0441                 _WPUC2 0442                 _WPUA6 04AE  
               _WPUC3 0443                 pclath 000A                 status 0003   __size_of_LED_Contrl 0091  
               wtemp0 007E          __end_of_main 0104    __size_of_Delay_xms 0018                ??_main 0078  
   __end_of_GPIO_Init 0123                _ADCON0 001F                _ADRESH 001E                _ADRESL 009E  
              _ANSEL0 0488                _ANSEL1 0489                _ANSEL2 048A                _ANSEL3 048B  
              _ANSEL4 048C                _ANSEL5 048D                _ANSEL6 048E                _ANSEL7 048F  
              i1l1091 0000                _OSCCON 008F                _OPTION 0081                _WDTCON 0018  
              _TRISA0 0428                _TRISA1 0429                _TRISC1 0439                _TRISC2 043A  
              _TRISA6 042E                _TRISC3 043B             ?_ADC_Init 0070                saved_w 007E  
   __end_of_Delay_xms 013B        __pcstackCOMMON 0070          ??_LED_Contrl 0072            ??_ADC_Init 0078  
  __end_of_LED_Contrl 009C          ?_GetADCValue 0072            __pmaintext 009C            __pintentry 0004  
             _GO_DONE 00F9               _PSTRCON 019D               _STRSYNC 0CEC             _ADC_Class 0078  
       ??_System_init 0072          __size_of_ISR 0007             _GPIO_Init 0104  end_of_initialization 017E  
 __end_of_System_init 0170     __size_of_ADC_Init 0017            ?_GPIO_Init 0070       LED_Contrl@num_t 0072  
  GetADCValue@ADC_num 0074             _Delay_xms 0123  __size_of_GetADCValue 0015   start_initialization 017C  
         __end_of_ISR 0177           _System_init 0167            ?_Delay_xms 0072           __pbssCOMMON 0078  
         ??_GPIO_Init 0072             __pswtext1 0177              _ADC_Init 013B     interrupt_function 0004  
         ??_Delay_xms 0074              __ptext90 013B              __ptext91 0123              __ptext92 000B  
            __ptext93 0152              __ptext94 0104              __ptext95 0167              __ptext96 0170  
            __ptext97 0000              __ptext89 0000         __size_of_main 0068         ??_GetADCValue 0074  
        ?_System_init 0070            _LED_Contrl 000B            Delay_xms@i 0076            Delay_xms@x 0072  
            intlevel1 0000   __end_of_GetADCValue 0167  
